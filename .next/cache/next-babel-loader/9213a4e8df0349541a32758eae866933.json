{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/louis/Desktop/corona/components/CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport useStats from '../utils/useStats';\nimport Stats from './Stats';\nexport default function CountrySelector() {\n  var _useStats = useStats('https://covid19.mathdro.id/api/countries'),\n      countries = _useStats.stats,\n      loading = _useStats.loading,\n      error = _useStats.error;\n\n  var _useState = useState('CAN'),\n      selectedCountry = _useState[0],\n      setSelectedCountry = _useState[1];\n\n  if (!countries) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Loading...\");\n  console.log(countries);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Currently showing \", selectedCountry), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      setSelectedCountry(e.target.value);\n    },\n    value: selectedCountry,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"debugger;\", Object.entries(countries.countries).map(function (_ref, i) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        country = _ref2[0],\n        code = _ref2[1];\n\n    return __jsx(\"option\", {\n      // selected={selectedCountry === countries.iso3[code]}\n      key: i,\n      value: countries.iso3[code],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, country);\n  })), __jsx(Stats, {\n    url: \"https://covid19.mathdro.id/api/countries/\".concat(selectedCountry),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/louis/Desktop/corona/components/CountrySelector.js"],"names":["useState","useStats","Stats","CountrySelector","countries","stats","loading","error","selectedCountry","setSelectedCountry","console","log","e","target","value","Object","entries","map","i","country","code","iso3"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA,kBACKF,QAAQ,CACnD,0CADmD,CADb;AAAA,MACzBG,SADyB,aAChCC,KADgC;AAAA,MACdC,OADc,aACdA,OADc;AAAA,MACLC,KADK,aACLA,KADK;;AAAA,kBAIMP,QAAQ,CAAC,KAAD,CAJd;AAAA,MAIjCQ,eAJiC;AAAA,MAIhBC,kBAJgB;;AAKxC,MAAI,CAACL,SAAL,EAAgB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEhBM,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuBI,eAAvB,CADF,EAEE;AACE,IAAA,QAAQ,EAAE,kBAACI,CAAD,EAAO;AACfH,MAAAA,kBAAkB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD,KAHH;AAIE,IAAA,KAAK,EAAEN,eAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOGO,MAAM,CAACC,OAAP,CAAeZ,SAAS,CAACA,SAAzB,EAAoCa,GAApC,CAAwC,gBAAkBC,CAAlB;AAAA;AAAA,QAAEC,OAAF;AAAA,QAAWC,IAAX;;AAAA,WACvC;AACE;AACA,MAAA,GAAG,EAAEF,CAFP;AAGE,MAAA,KAAK,EAAEd,SAAS,CAACiB,IAAV,CAAeD,IAAf,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,OALH,CADuC;AAAA,GAAxC,CAPH,CAFF,EAmBE,MAAC,KAAD;AACE,IAAA,GAAG,qDAA8CX,eAA9C,CADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAyBD","sourcesContent":["import { useState } from 'react';\nimport useStats from '../utils/useStats';\nimport Stats from './Stats';\n\nexport default function CountrySelector() {\n  const { stats: countries, loading, error } = useStats(\n    'https://covid19.mathdro.id/api/countries'\n  );\n  const [selectedCountry, setSelectedCountry] = useState('CAN');\n  if (!countries) return <p>Loading...</p>;\n\n  console.log(countries);\n\n  return (\n    <div>\n      <h2>Currently showing {selectedCountry}</h2>\n      <select\n        onChange={(e) => {\n          setSelectedCountry(e.target.value);\n        }}\n        value={selectedCountry}\n      >\n        debugger;\n        {Object.entries(countries.countries).map(([country, code], i) => (\n          <option\n            // selected={selectedCountry === countries.iso3[code]}\n            key={i}\n            value={countries.iso3[code]}\n          >\n            {country}\n          </option>\n        ))}\n      </select>\n      <Stats\n        url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}\n      ></Stats>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}